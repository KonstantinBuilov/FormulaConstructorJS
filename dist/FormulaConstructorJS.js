function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}function _classPrivateFieldSet(receiver,privateMap,value){var descriptor=privateMap.get(receiver);if(!descriptor){throw new TypeError("attempted to set private field on non-instance")}if(descriptor.set){descriptor.set.call(receiver,value)}else{if(!descriptor.writable){throw new TypeError("attempted to set read only private field")}descriptor.value=value}return value}function _classPrivateFieldGet(receiver,privateMap){var descriptor=privateMap.get(receiver);if(!descriptor){throw new TypeError("attempted to get private field on non-instance")}if(descriptor.get){return descriptor.get.call(receiver)}return descriptor.value}let FormulaConstructor=function(){function FormulaConstructor(order="input,buttons,constructor,result"){_classCallCheck(this,FormulaConstructor);_signArray.set(this,{writable:true,value:[]});_listenerArray.set(this,{writable:true,value:[]});_buildContainer.set(this,{writable:true,value:()=>{const container=document.createElement("div");container.classList.add("fcontainer");document.body.appendChild(container);return container}});_addConstructor.set(this,{writable:true,value:()=>{const constructor=document.createElement("div");constructor.classList.add("fconstructor");const dragOverEvent=constructor.addEventListener("dragover",_classPrivateFieldGet(this,_dragOver).bind(this));const dragStartEvent=constructor.addEventListener("dragstart",_classPrivateFieldGet(this,_dragStart).bind(this));const dragEndEvent=constructor.addEventListener("dragend",_classPrivateFieldGet(this,_dragEnd).bind(this));const keyUpEvent=constructor.addEventListener("keyup",_classPrivateFieldGet(this,_checkInput).bind(this));_classPrivateFieldGet(this,_listenerArray).push({element:constructor,event:"dragover",listener:dragOverEvent},{element:constructor,event:"dragstart",listener:dragStartEvent},{element:constructor,event:"dragend",listener:dragEndEvent},{element:constructor,event:"keyup",listener:keyUpEvent});return constructor}});_addInput.set(this,{writable:true,value:()=>{const input=document.createElement("input");input.classList.add("finput");input.type="text";input.placeholder="input formula";const inputEvent=input.addEventListener("keyup",_classPrivateFieldGet(this,_inputToConstructor).bind(this));_classPrivateFieldGet(this,_listenerArray).push({element:input,event:"keyup",listener:inputEvent});return input}});_addButtons.set(this,{writable:true,value:()=>{const buttons=document.createElement("fbuttons");buttons.innerHTML="<button id=\"number\" class=\"fbutton\">Add number</button>\n        <button id=\"brakets\" class=\"fbutton\">Add brakets</button>\n        <button id=\"clear\" class=\"fbutton\">Clear</button>";const buttonsEvent=buttons.addEventListener("click",_classPrivateFieldGet(this,_buttonClick).bind(this));_classPrivateFieldGet(this,_listenerArray).push({element:buttons,event:"click",listener:buttonsEvent});return buttons}});_addResult.set(this,{writable:true,value:()=>{const result=document.createElement("label");result.classList.add("fresult");result.textContent="Result: 0";return result}});_inputToConstructor.set(this,{writable:true,value:e=>{this.importClearFormula(e.target.value);if(this.result)_classPrivateFieldGet(this,_calcResult).call(this,e.target.value)}});_calcResult.set(this,{writable:true,value:input=>{if(input.match(/([0-9]|\))$/)){this.result.textContent="Result: "+eval(input.replace("=","==").replace("<>","!=")).toString()}else if(input==""){this.result.textContent="Result: 0"}}});_buttonClick.set(this,{writable:true,value:e=>{switch(e.target.id){case"number":this.addNumber();break;case"brakets":this.addBrakets();break;case"clear":this.clear();break;}}});_addElement.set(this,{writable:true,value:type=>{if(this.constructor.childElementCount>0){const sign=createSignBlock("");animatedAppear(sign);this.constructor.appendChild(sign)}const block=type=="number"?createNumberBlock():createBraketsBlock();animatedAppear(block);this.constructor.appendChild(block)}});_dragOver.set(this,{writable:true,value:e=>{e.preventDefault();const dragging=this.constructor.querySelector(".dragging");if(e.target!=dragging){const parent=e.target.className==("block"||"sign")?e.target.parentElement:e.target;appendToTarget(dragging,parent,e.clientX,e.clientY)}}});_dragStart.set(this,{writable:true,value:e=>{if(e.target.className=="block"||e.target.className=="brakets"){e.target.classList.add("dragging");e.dataTransfer.effectAllowed=e.dataTransfer.dropEffect="move";_classPrivateFieldGet(this,_cutSigns).call(this)}}});_dragEnd.set(this,{writable:true,value:e=>{if(e.dataTransfer.dropEffect=="none"){e.target.parentElement.removeChild(e.target)}else{e.target.classList.remove("dragging")}_classPrivateFieldGet(this,_putSigns).call(this);if(this.input)this.input.value=this.exportClearFormula();if(this.result)_classPrivateFieldGet(this,_calcResult).call(this,this.exportClearFormula())}});_cutSigns.set(this,{writable:true,value:()=>{this.constructor.querySelectorAll(".block, .brakets").forEach(el=>{if(el!=el.parentElement.lastElementChild){const sign=el.nextElementSibling;_classPrivateFieldGet(this,_signArray).push({id:el.id,value:sign.value});sign.style.transform="scale(0)";setTimeout(()=>sign.parentElement.removeChild(sign),200)}})}});_putSigns.set(this,{writable:true,value:()=>{this.constructor.querySelectorAll(".block, .brakets").forEach(el=>{if(el!=el.parentElement.lastElementChild){let sign=_classPrivateFieldGet(this,_signArray).find(x=>x.id==el.id)||{value:""};const signBlock=createSignBlock(sign.value);animatedAppear(signBlock);el.parentElement.insertBefore(signBlock,el.nextElementSibling)}});_classPrivateFieldSet(this,_signArray,[])}});_checkInput.set(this,{writable:true,value:e=>{if(e.target.className=="sign"){let input=e.target.value;let regex=new RegExp("^([+-/*]{1})$|^([<>=]{1,2})$");if(!regex.test(input)){e.target.value=""}}if(this.input)this.input.value=this.exportClearFormula();if(this.result)_classPrivateFieldGet(this,_calcResult).call(this,this.exportClearFormula())}});document.head.appendChild(styleComponent());this.container=document.querySelector(".fcontainer")||_classPrivateFieldGet(this,_buildContainer).call(this);order.replace(/\s/g,"").split(",").forEach(name=>{switch(name){case"constructor":this.constructor=_classPrivateFieldGet(this,_addConstructor).call(this);this.container.appendChild(this.constructor);break;case"buttons":this.buttons=_classPrivateFieldGet(this,_addButtons).call(this);this.container.appendChild(this.buttons);break;case"input":this.input=_classPrivateFieldGet(this,_addInput).call(this);this.container.appendChild(this.input);break;case"result":this.result=_classPrivateFieldGet(this,_addResult).call(this);this.container.appendChild(this.result);}});if(!order.includes("constructor")){this.constructor=_classPrivateFieldGet(this,_addConstructor).call(this);this.container.appendChild(this.constructor)}}_createClass(FormulaConstructor,[{key:"importJSONFormula",value:function importJSONFormula(formula){this.constructor.innerHTML="";const formulaObject=JSON.parse(formula);objectToFormula(formulaObject,this.constructor)}},{key:"importClearFormula",value:function importClearFormula(formula){this.constructor.innerHTML="";stringToFormula(formula,this.constructor)}},{key:"exportJSONFormula",value:function exportJSONFormula(){const formula=formulaToObject(this.constructor.children);return JSON.stringify(formula)}},{key:"exportClearFormula",value:function exportClearFormula(){return formulaToString(this.constructor.children)}},{key:"addBrakets",value:function addBrakets(){_classPrivateFieldGet(this,_addElement).call(this,"brakets")}},{key:"addNumber",value:function addNumber(){_classPrivateFieldGet(this,_addElement).call(this,"number")}},{key:"clear",value:function clear(){this.constructor.innerHTML="";if(this.input)this.input.value="";if(this.result)this.result.textContent="Result: 0"}},{key:"destroy",value:function destroy(){_classPrivateFieldGet(this,_listenerArray).forEach(({element,event,listener})=>{element.removeEventListener(event,listener)});this.container.parentElement.removeChild(this.container)}}]);return FormulaConstructor}();var _signArray=new WeakMap;var _listenerArray=new WeakMap;var _buildContainer=new WeakMap;var _addConstructor=new WeakMap;var _addInput=new WeakMap;var _addButtons=new WeakMap;var _addResult=new WeakMap;var _inputToConstructor=new WeakMap;var _calcResult=new WeakMap;var _buttonClick=new WeakMap;var _addElement=new WeakMap;var _dragOver=new WeakMap;var _dragStart=new WeakMap;var _dragEnd=new WeakMap;var _cutSigns=new WeakMap;var _putSigns=new WeakMap;var _checkInput=new WeakMap;
HTMLElement.prototype.setAttributes=function(args){Object.keys(args).forEach(attr=>this.setAttribute(attr,args[attr]))};function createNumberBlock(value=""){const numberBlock=document.createElement("input");numberBlock.setAttributes({id:Date.now()+Math.trunc(Math.random()*100),class:"block",type:"number",draggable:true,value});return numberBlock}function createSignBlock(value=""){const signBlock=document.createElement("input");signBlock.setAttributes({class:"sign",type:"text",value});return signBlock}function createBraketsBlock(){const braketsBlock=document.createElement("div");braketsBlock.setAttributes({id:Date.now()+Math.trunc(Math.random()*100),class:"brakets",type:"brakets",draggable:true});return braketsBlock}
const formulaToString=elements=>{return[...elements].reduce((result,el)=>{switch(el.getAttribute("type")){case"text":return result+el.value;case"number":return result+el.value;case"brakets":return result+"("+formulaToString(el.children)+")";}},"")};const stringToFormula=(input,parent)=>{if(input){input.match(/(\d*\.\d+)|(\d+)|([\+\-\*\/])|([!<=>](=|))|\(.*\)/g).forEach(item=>{if(item.match(/\(.*\)/)){const brakets=createBraketsBlock();stringToFormula(item.substring(1,item.length-1),brakets);parent.appendChild(brakets)}else if(item.match(/[0-9]/)){const number=createNumberBlock(item);parent.appendChild(number)}else if(item.match(/([\+\-\*\/])|([!<=>](.|))/)){const sign=createSignBlock(item);parent.appendChild(sign)}})}};const formulaToObject=elements=>{return[...elements].map(el=>{switch(el.getAttribute("type")){case"text":return{type:"sign",value:el.value};case"number":return{type:"number",value:el.value};case"braket":return{type:"brakets",value:formulaToObject(el.children)};}})};const objectToFormula=(formulaObject,parent)=>{formulaObject.forEach(el=>{switch(el.type){case"sign":parent.appendChild(createSignBlock(el.value));break;case"number":parent.appendChild(createNumberBlock(el.value));break;case"brakets":const braket=createBraketsBlock();objectToFormula(el.value,braket);parent.appendChild(braket);break;}})};
function getDragAfterElementXY(container,x,y){const blocks=[...container.querySelectorAll(".block:not(.dragging), .brakets")];return blocks.reduce((closest,child)=>{const box=child.getBoundingClientRect();const offsetX=x-box.left-box.width/2;const offsetY=y-box.top-box.height;if(0>offsetX&&offsetX>closest.offsetX&&0>offsetY&&offsetY>closest.offsetY){return{offsetX:offsetX,offsetY:offsetY,element:child}}else{return closest}},{offsetX:Number.NEGATIVE_INFINITY,offsetY:Number.NEGATIVE_INFINITY}).element}function appendToTarget(element,target,clientX,clientY){const afterElement=getDragAfterElementXY(target,clientX,clientY);if(afterElement==null){target.appendChild(element)}else{target.insertBefore(element,afterElement)}}function animatedAppear(element){element.style.transform="scale(0)";setTimeout(()=>{element.style.transform="";element.removeAttribute("style")},200)}
const styleComponent=()=>{const styleBlock=document.createElement("style");styleBlock.textContent=".fbutton, .block, .sign, .brakets, .fresult {\n        margin: 0.5vh 0.5vw 0.5vh 0.5vw;\n        padding: 0.5vh 0.5vw 0.5vh 0.5vw;\n        border: none;\n        border-radius: 5px;\n        background: #e7e7e7;\n        -webkit-box-shadow: 5px 5px 10px #9b9b9b, -5px -5px 10px white;\n                box-shadow: 5px 5px 10px #9b9b9b, -5px -5px 10px white;\n        -webkit-transition: -webkit-transform .2s;\n        transition: -webkit-transform .2s;\n        transition: transform .2s;\n        transition: transform .2s, -webkit-transform .2s;\n      }\n      \n      .fbutton:focus, .block:focus, .sign:focus, .brakets:focus, .fresult:focus {\n        outline: none;\n      }\n      \n      .fconstructor, .finput {\n        border-radius: 10px;\n        background: #e7e7e7;\n        -webkit-box-shadow: inset 5px 5px 10px #9b9b9b, inset -5px -5px 10px white;\n                box-shadow: inset 5px 5px 10px #9b9b9b, inset -5px -5px 10px white;\n      }\n      \n      .fcontainer {\n        font-family: sans-serif;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: vertical;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: column;\n                flex-direction: column;\n      }\n      \n      .fbuttons {\n        margin: 5px;\n      }\n      \n      .fbutton {\n        -webkit-transition: background .2s;\n        transition: background .2s;\n      }\n      \n      .fbutton:hover {\n        background: #f4f4f4;\n      }\n      \n      .fbutton:active {\n        background: #cecece;\n      }\n      \n      .fconstructor {\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        padding: 10px;\n        margin: 10px;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n      }\n      \n      .block {\n        height: 1.5rem;\n        width: 4rem;\n        display: inline-block;\n      }\n      \n      .sign {\n        width: 1rem;\n        height: 1rem;\n        text-align: center;\n      }\n      \n      .brakets {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        min-height: 3rem;\n        min-width: 3rem;\n        border-left: 1px solid #817f7f;\n        border-right: 1px solid #817f7f;\n      }\n      \n      .dragging {\n        opacity: .5;\n      }\n      \n      input[type=\"number\"] {\n        -moz-appearance: textfield;\n      }\n      \n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n      }\n      \n      .finput {\n        border: none;\n        margin: 0.5vh 0.5vw 0.5vh 0.5vw;\n        padding: 0.5vh 0.5vw 0.5vh 0.5vw;\n      }\n      \n      .finput:focus {\n        outline: none;\n      }";return styleBlock};
